{"version":3,"sources":["../../../../Sword2offer/CH3-高质量代码/ES6/mergeLinkedList.js"],"names":["LinkedList","head","Item","value","next","push","item","current","print","console","log","getHead","merge","listA","listB","currentA","currentB","linkedListA","linkedListB","linkedList"],"mappings":";;AAAA,IAAIA,aAAa,SAAbA,UAAa,GAAY;AAC3B,MAAIC,OAAO,IAAX;AACA,MAAIC,OAAO,SAAPA,IAAO,CAAUC,KAAV,EAAiB;AAC1B,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKC,IAAL,GAAY,IAAZ;AACD,GAHD;AAIA,OAAKC,IAAL,GAAY,UAACF,KAAD,EAAW;AACrB,QAAI,CAACF,IAAL,EAAW;AACTA,aAAO,IAAIC,IAAJ,CAASC,KAAT,CAAP;AACD,KAFD,MAEO;AACL,UAAIG,OAAO,IAAIJ,IAAJ,CAASC,KAAT,CAAX;AAAA,UACEI,UAAUN,IADZ;AAEA;AACA,aAAOM,QAAQH,IAAf,EAAqB;AACnBG,kBAAUA,QAAQH,IAAlB;AACD;AACDG,cAAQH,IAAR,GAAeE,IAAf;AACD;AACF,GAZD;AAaA,OAAKE,KAAL,GAAa,YAAM;AACjB,QAAID,UAAUN,IAAd;AACA,WAAOM,OAAP,EAAgB;AACdE,cAAQC,GAAR,CAAYH,QAAQJ,KAApB;AACAI,gBAAUA,QAAQH,IAAlB;AACD;AACF,GAND;AAOA,OAAKO,OAAL,GAAe,YAAM;AACnB,WAAOV,IAAP;AACD,GAFD;AAGA,OAAKW,KAAL,GAAa,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC7B,QAAI,CAACD,KAAD,IAAU,CAACC,KAAf,EAAsB;AACpB;AACD;AACD,QAAI,CAACD,KAAD,IAAUC,KAAd,EAAqB;AACnBb,aAAOa,KAAP;AACA;AACD;AACD,QAAI,CAACA,KAAD,IAAUD,KAAd,EAAqB;AACnBZ,aAAOY,KAAP;AACA;AACD;AACD,QAAIE,WAAWF,KAAf;AACA,QAAIG,WAAWF,KAAf;AACA,QAAIP,gBAAJ;AACA,WAAOQ,YAAYC,QAAnB,EAA6B;AAC3B,UAAID,SAASZ,KAAT,GAAiBa,SAASb,KAA9B,EAAqC;AACnC,YAAI,CAACF,IAAL,EAAW;AACTA,iBAAOc,QAAP;AACAR,oBAAUN,IAAV;AACD,SAHD,MAGO;AACLM,kBAAQH,IAAR,GAAeW,QAAf;AACAR,oBAAUA,QAAQH,IAAlB;AACD;AACDW,mBAAWA,SAASX,IAApB;AACD,OATD,MASO;AACL,YAAI,CAACH,IAAL,EAAW;AACTA,iBAAOe,QAAP;AACAT,oBAAUN,IAAV;AACD,SAHD,MAGO;AACLM,kBAAQH,IAAR,GAAeY,QAAf;AACAT,oBAAUA,QAAQH,IAAlB;AACD;AACDY,mBAAWA,SAASZ,IAApB;AACD;AACF;;AAED,QAAIW,QAAJ,EAAc;AACZR,cAAQH,IAAR,GAAeW,QAAf;AACAR,gBAAUA,QAAQH,IAAlB;AACAW,iBAAWA,SAASX,IAApB;AACD;AACD,QAAIY,QAAJ,EAAc;AACZT,cAAQH,IAAR,GAAeY,QAAf;AACAT,gBAAUA,QAAQH,IAAlB;AACAY,iBAAWA,SAASZ,IAApB;AACD;AACF,GA/CD;AAgDD,CA7ED;;AA+EA,IAAIa,cAAc,IAAIjB,UAAJ,EAAlB;AACAiB,YAAYZ,IAAZ,CAAiB,CAAjB;AACAY,YAAYZ,IAAZ,CAAiB,CAAjB;AACAY,YAAYZ,IAAZ,CAAiB,CAAjB;AACAY,YAAYZ,IAAZ,CAAiB,CAAjB;AACA,IAAIa,cAAc,IAAIlB,UAAJ,EAAlB;AACAkB,YAAYb,IAAZ,CAAiB,CAAjB;AACAa,YAAYb,IAAZ,CAAiB,CAAjB;AACAa,YAAYb,IAAZ,CAAiB,CAAjB;AACAa,YAAYb,IAAZ,CAAiB,CAAjB;AACA,IAAIc,aAAa,IAAInB,UAAJ,EAAjB;AACAmB,WAAWP,KAAX,CAAiBK,YAAYN,OAAZ,EAAjB,EAAwCO,YAAYP,OAAZ,EAAxC;AACAQ,WAAWX,KAAX","file":"mergeLinkedList.js","sourcesContent":["let LinkedList = function () {\n  let head = null\n  let Item = function (value) {\n    this.value = value\n    this.next = null\n  }\n  this.push = (value) => {\n    if (!head) {\n      head = new Item(value)\n    } else {\n      let item = new Item(value),\n        current = head\n      // 找到末尾节点\n      while (current.next) {\n        current = current.next\n      }\n      current.next = item\n    }\n  }\n  this.print = () => {\n    let current = head\n    while (current) {\n      console.log(current.value)\n      current = current.next\n    }\n  }\n  this.getHead = () => {\n    return head\n  }\n  this.merge = (listA, listB) => {\n    if (!listA && !listB) {\n      return\n    }\n    if (!listA && listB) {\n      head = listB\n      return\n    }\n    if (!listB && listA) {\n      head = listA\n      return\n    }\n    let currentA = listA\n    let currentB = listB\n    let current\n    while (currentA && currentB) {\n      if (currentA.value < currentB.value) {\n        if (!head) {\n          head = currentA\n          current = head\n        } else {\n          current.next = currentA\n          current = current.next\n        }\n        currentA = currentA.next\n      } else {\n        if (!head) {\n          head = currentB\n          current = head\n        } else {\n          current.next = currentB\n          current = current.next\n        }\n        currentB = currentB.next\n      }\n    }\n\n    if (currentA) {\n      current.next = currentA\n      current = current.next\n      currentA = currentA.next\n    }\n    if (currentB) {\n      current.next = currentB\n      current = current.next\n      currentB = currentB.next\n    }\n  }\n}\n\nlet linkedListA = new LinkedList()\nlinkedListA.push(1)\nlinkedListA.push(3)\nlinkedListA.push(5)\nlinkedListA.push(7)\nlet linkedListB = new LinkedList()\nlinkedListB.push(2)\nlinkedListB.push(4)\nlinkedListB.push(6)\nlinkedListB.push(8)\nlet linkedList = new LinkedList()\nlinkedList.merge(linkedListA.getHead(), linkedListB.getHead())\nlinkedList.print()\n"]}